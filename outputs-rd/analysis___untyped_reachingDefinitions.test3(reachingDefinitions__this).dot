digraph {
	"node0" [shape="rect",color="black",label=<x = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(x, 'inputs/reaching-definitions.imp':17:10)] ]]<BR/>}} -&gt; [x]>];
	"node1" [shape="rect",color="gray",label=<&lt;(i, 5)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(i, 'inputs/reaching-definitions.imp':18:10), (i, 'inputs/reaching-definitions.imp':19:24), (x, 'inputs/reaching-definitions.imp':17:10), (x, 'inputs/reaching-definitions.imp':20:7)] ]]<BR/>}} -&gt; [i &lt; 5]>];
	"node2" [shape="rect",color="gray",label=<x = &quot;p&quot;<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(i, 'inputs/reaching-definitions.imp':18:10), (i, 'inputs/reaching-definitions.imp':19:24), (x, 'inputs/reaching-definitions.imp':20:7)] ]]<BR/>}} -&gt; [x]>];
	"node3" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(i, 'inputs/reaching-definitions.imp':18:10), (i, 'inputs/reaching-definitions.imp':19:24), (x, 'inputs/reaching-definitions.imp':17:10), (x, 'inputs/reaching-definitions.imp':20:7)] ]]<BR/>}} -&gt; [skip]>];
	"node4" [shape="rect",color="gray",label=<i = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(i, 'inputs/reaching-definitions.imp':18:10), (x, 'inputs/reaching-definitions.imp':17:10)] ]]<BR/>}} -&gt; [i]>];
	"node5" [shape="rect",color="gray",label=<i = +(i, 1)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(i, 'inputs/reaching-definitions.imp':19:24), (x, 'inputs/reaching-definitions.imp':20:7)] ]]<BR/>}} -&gt; [i]>];
	"node1" -> "node2" [color="blue",style="dashed"];
	"node1" -> "node3" [color="red",style="dashed"];
	"node2" -> "node5" [color="black"];
	"node4" -> "node1" [color="black"];
	"node5" -> "node1" [color="black"];
	"node0" -> "node4" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
